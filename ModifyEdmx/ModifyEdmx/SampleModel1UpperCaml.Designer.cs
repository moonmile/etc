//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace ModifyEdmx
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class wordpressEntities : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'wordpressEntities' セクションにある接続文字列を使用して新しい wordpressEntities オブジェクトを初期化します。
        /// </summary>
        public wordpressEntities() : base("name=wordpressEntities", "wordpressEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい wordpressEntities オブジェクトを初期化します。
        /// </summary>
        public wordpressEntities(string connectionString) : base(connectionString, "wordpressEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい wordpressEntities オブジェクトを初期化します。
        /// </summary>
        public wordpressEntities(EntityConnection connection) : base(connection, "wordpressEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Commentmeta> Commentmeta
        {
            get
            {
                if ((_Commentmeta == null))
                {
                    _Commentmeta = base.CreateObjectSet<Commentmeta>("Commentmeta");
                }
                return _Commentmeta;
            }
        }
        private ObjectSet<Commentmeta> _Commentmeta;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<wp_comments> wp_comments
        {
            get
            {
                if ((_wp_comments == null))
                {
                    _wp_comments = base.CreateObjectSet<wp_comments>("wp_comments");
                }
                return _wp_comments;
            }
        }
        private ObjectSet<wp_comments> _wp_comments;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Links> Links
        {
            get
            {
                if ((_Links == null))
                {
                    _Links = base.CreateObjectSet<Links>("Links");
                }
                return _Links;
            }
        }
        private ObjectSet<Links> _Links;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Options> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Options>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Options> _Options;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Postmeta> Postmeta
        {
            get
            {
                if ((_Postmeta == null))
                {
                    _Postmeta = base.CreateObjectSet<Postmeta>("Postmeta");
                }
                return _Postmeta;
            }
        }
        private ObjectSet<Postmeta> _Postmeta;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Posts> PostSets
        {
            get
            {
                if ((_PostSets == null))
                {
                    _PostSets = base.CreateObjectSet<Posts>("PostSets");
                }
                return _PostSets;
            }
        }
        private ObjectSet<Posts> _PostSets;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<TermRelationships> TermRelationships
        {
            get
            {
                if ((_TermRelationships == null))
                {
                    _TermRelationships = base.CreateObjectSet<TermRelationships>("TermRelationships");
                }
                return _TermRelationships;
            }
        }
        private ObjectSet<TermRelationships> _TermRelationships;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<TermTaxonomy> TermTaxonomy
        {
            get
            {
                if ((_TermTaxonomy == null))
                {
                    _TermTaxonomy = base.CreateObjectSet<TermTaxonomy>("TermTaxonomy");
                }
                return _TermTaxonomy;
            }
        }
        private ObjectSet<TermTaxonomy> _TermTaxonomy;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Terms> Terms
        {
            get
            {
                if ((_Terms == null))
                {
                    _Terms = base.CreateObjectSet<Terms>("Terms");
                }
                return _Terms;
            }
        }
        private ObjectSet<Terms> _Terms;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Usermeta> Usermeta
        {
            get
            {
                if ((_Usermeta == null))
                {
                    _Usermeta = base.CreateObjectSet<Usermeta>("Usermeta");
                }
                return _Usermeta;
            }
        }
        private ObjectSet<Usermeta> _Usermeta;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo メソッド
    
        /// <summary>
        /// Commentmeta EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToCommentmeta(Commentmeta commentmeta)
        {
            base.AddObject("Commentmeta", commentmeta);
        }
    
        /// <summary>
        /// wp_comments EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddTowp_comments(wp_comments wp_comments)
        {
            base.AddObject("wp_comments", wp_comments);
        }
    
        /// <summary>
        /// Links EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToLinks(Links links)
        {
            base.AddObject("Links", links);
        }
    
        /// <summary>
        /// Options EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToOptions(Options options)
        {
            base.AddObject("Options", options);
        }
    
        /// <summary>
        /// Postmeta EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToPostmeta(Postmeta postmeta)
        {
            base.AddObject("Postmeta", postmeta);
        }
    
        /// <summary>
        /// PostSets EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToPostSets(Posts posts)
        {
            base.AddObject("PostSets", posts);
        }
    
        /// <summary>
        /// TermRelationships EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToTermRelationships(TermRelationships termRelationships)
        {
            base.AddObject("TermRelationships", termRelationships);
        }
    
        /// <summary>
        /// TermTaxonomy EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToTermTaxonomy(TermTaxonomy termTaxonomy)
        {
            base.AddObject("TermTaxonomy", termTaxonomy);
        }
    
        /// <summary>
        /// Terms EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToTerms(Terms terms)
        {
            base.AddObject("Terms", terms);
        }
    
        /// <summary>
        /// Usermeta EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToUsermeta(Usermeta usermeta)
        {
            base.AddObject("Usermeta", usermeta);
        }
    
        /// <summary>
        /// Users EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Commentmeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commentmeta : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Commentmeta オブジェクトを作成します。
        /// </summary>
        /// <param name="metaId">MetaId プロパティの初期値。</param>
        /// <param name="commentId">CommentId プロパティの初期値。</param>
        public static Commentmeta CreateCommentmeta(global::System.Decimal metaId, global::System.Decimal commentId)
        {
            Commentmeta commentmeta = new Commentmeta();
            commentmeta.MetaId = metaId;
            commentmeta.CommentId = commentId;
            return commentmeta;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MetaId
        {
            get
            {
                return _MetaId;
            }
            set
            {
                if (_MetaId != value)
                {
                    OnMetaIdChanging(value);
                    ReportPropertyChanging("MetaId");
                    _MetaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaId");
                    OnMetaIdChanged();
                }
            }
        }
        private global::System.Decimal _MetaId;
        partial void OnMetaIdChanging(global::System.Decimal value);
        partial void OnMetaIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                OnCommentIdChanging(value);
                ReportPropertyChanging("CommentId");
                _CommentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentId");
                OnCommentIdChanged();
            }
        }
        private global::System.Decimal _CommentId;
        partial void OnCommentIdChanging(global::System.Decimal value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKey
        {
            get
            {
                return _MetaKey;
            }
            set
            {
                OnMetaKeyChanging(value);
                ReportPropertyChanging("MetaKey");
                _MetaKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKey");
                OnMetaKeyChanged();
            }
        }
        private global::System.String _MetaKey;
        partial void OnMetaKeyChanging(global::System.String value);
        partial void OnMetaKeyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaValue
        {
            get
            {
                return _MetaValue;
            }
            set
            {
                OnMetaValueChanging(value);
                ReportPropertyChanging("MetaValue");
                _MetaValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaValue");
                OnMetaValueChanged();
            }
        }
        private global::System.String _MetaValue;
        partial void OnMetaValueChanging(global::System.String value);
        partial void OnMetaValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Links")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Links : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Links オブジェクトを作成します。
        /// </summary>
        /// <param name="linId">LinId プロパティの初期値。</param>
        /// <param name="linUrl">LinUrl プロパティの初期値。</param>
        /// <param name="linName">LinName プロパティの初期値。</param>
        /// <param name="linImage">LinImage プロパティの初期値。</param>
        /// <param name="linTarget">LinTarget プロパティの初期値。</param>
        /// <param name="linCategory">LinCategory プロパティの初期値。</param>
        /// <param name="linDescription">LinDescription プロパティの初期値。</param>
        /// <param name="linVisible">LinVisible プロパティの初期値。</param>
        /// <param name="linOwner">LinOwner プロパティの初期値。</param>
        /// <param name="linRating">LinRating プロパティの初期値。</param>
        /// <param name="linUpdated">LinUpdated プロパティの初期値。</param>
        /// <param name="linRel">LinRel プロパティの初期値。</param>
        /// <param name="linNotes">LinNotes プロパティの初期値。</param>
        /// <param name="linRss">LinRss プロパティの初期値。</param>
        public static Links CreateLinks(global::System.Decimal linId, global::System.String linUrl, global::System.String linName, global::System.String linImage, global::System.String linTarget, global::System.Int64 linCategory, global::System.String linDescription, global::System.String linVisible, global::System.Decimal linOwner, global::System.Int32 linRating, global::System.DateTime linUpdated, global::System.String linRel, global::System.String linNotes, global::System.String linRss)
        {
            Links links = new Links();
            links.LinId = linId;
            links.LinUrl = linUrl;
            links.LinName = linName;
            links.LinImage = linImage;
            links.LinTarget = linTarget;
            links.LinCategory = linCategory;
            links.LinDescription = linDescription;
            links.LinVisible = linVisible;
            links.LinOwner = linOwner;
            links.LinRating = linRating;
            links.LinUpdated = linUpdated;
            links.LinRel = linRel;
            links.LinNotes = linNotes;
            links.LinRss = linRss;
            return links;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LinId
        {
            get
            {
                return _LinId;
            }
            set
            {
                if (_LinId != value)
                {
                    OnLinIdChanging(value);
                    ReportPropertyChanging("LinId");
                    _LinId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LinId");
                    OnLinIdChanged();
                }
            }
        }
        private global::System.Decimal _LinId;
        partial void OnLinIdChanging(global::System.Decimal value);
        partial void OnLinIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinUrl
        {
            get
            {
                return _LinUrl;
            }
            set
            {
                OnLinUrlChanging(value);
                ReportPropertyChanging("LinUrl");
                _LinUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinUrl");
                OnLinUrlChanged();
            }
        }
        private global::System.String _LinUrl;
        partial void OnLinUrlChanging(global::System.String value);
        partial void OnLinUrlChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinName
        {
            get
            {
                return _LinName;
            }
            set
            {
                OnLinNameChanging(value);
                ReportPropertyChanging("LinName");
                _LinName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinName");
                OnLinNameChanged();
            }
        }
        private global::System.String _LinName;
        partial void OnLinNameChanging(global::System.String value);
        partial void OnLinNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinImage
        {
            get
            {
                return _LinImage;
            }
            set
            {
                OnLinImageChanging(value);
                ReportPropertyChanging("LinImage");
                _LinImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinImage");
                OnLinImageChanged();
            }
        }
        private global::System.String _LinImage;
        partial void OnLinImageChanging(global::System.String value);
        partial void OnLinImageChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinTarget
        {
            get
            {
                return _LinTarget;
            }
            set
            {
                OnLinTargetChanging(value);
                ReportPropertyChanging("LinTarget");
                _LinTarget = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinTarget");
                OnLinTargetChanged();
            }
        }
        private global::System.String _LinTarget;
        partial void OnLinTargetChanging(global::System.String value);
        partial void OnLinTargetChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LinCategory
        {
            get
            {
                return _LinCategory;
            }
            set
            {
                OnLinCategoryChanging(value);
                ReportPropertyChanging("LinCategory");
                _LinCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinCategory");
                OnLinCategoryChanged();
            }
        }
        private global::System.Int64 _LinCategory;
        partial void OnLinCategoryChanging(global::System.Int64 value);
        partial void OnLinCategoryChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinDescription
        {
            get
            {
                return _LinDescription;
            }
            set
            {
                OnLinDescriptionChanging(value);
                ReportPropertyChanging("LinDescription");
                _LinDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinDescription");
                OnLinDescriptionChanged();
            }
        }
        private global::System.String _LinDescription;
        partial void OnLinDescriptionChanging(global::System.String value);
        partial void OnLinDescriptionChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinVisible
        {
            get
            {
                return _LinVisible;
            }
            set
            {
                OnLinVisibleChanging(value);
                ReportPropertyChanging("LinVisible");
                _LinVisible = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinVisible");
                OnLinVisibleChanged();
            }
        }
        private global::System.String _LinVisible;
        partial void OnLinVisibleChanging(global::System.String value);
        partial void OnLinVisibleChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LinOwner
        {
            get
            {
                return _LinOwner;
            }
            set
            {
                OnLinOwnerChanging(value);
                ReportPropertyChanging("LinOwner");
                _LinOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinOwner");
                OnLinOwnerChanged();
            }
        }
        private global::System.Decimal _LinOwner;
        partial void OnLinOwnerChanging(global::System.Decimal value);
        partial void OnLinOwnerChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinRating
        {
            get
            {
                return _LinRating;
            }
            set
            {
                OnLinRatingChanging(value);
                ReportPropertyChanging("LinRating");
                _LinRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinRating");
                OnLinRatingChanged();
            }
        }
        private global::System.Int32 _LinRating;
        partial void OnLinRatingChanging(global::System.Int32 value);
        partial void OnLinRatingChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LinUpdated
        {
            get
            {
                return _LinUpdated;
            }
            set
            {
                OnLinUpdatedChanging(value);
                ReportPropertyChanging("LinUpdated");
                _LinUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinUpdated");
                OnLinUpdatedChanged();
            }
        }
        private global::System.DateTime _LinUpdated;
        partial void OnLinUpdatedChanging(global::System.DateTime value);
        partial void OnLinUpdatedChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinRel
        {
            get
            {
                return _LinRel;
            }
            set
            {
                OnLinRelChanging(value);
                ReportPropertyChanging("LinRel");
                _LinRel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinRel");
                OnLinRelChanged();
            }
        }
        private global::System.String _LinRel;
        partial void OnLinRelChanging(global::System.String value);
        partial void OnLinRelChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinNotes
        {
            get
            {
                return _LinNotes;
            }
            set
            {
                OnLinNotesChanging(value);
                ReportPropertyChanging("LinNotes");
                _LinNotes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinNotes");
                OnLinNotesChanged();
            }
        }
        private global::System.String _LinNotes;
        partial void OnLinNotesChanging(global::System.String value);
        partial void OnLinNotesChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LinRss
        {
            get
            {
                return _LinRss;
            }
            set
            {
                OnLinRssChanging(value);
                ReportPropertyChanging("LinRss");
                _LinRss = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LinRss");
                OnLinRssChanged();
            }
        }
        private global::System.String _LinRss;
        partial void OnLinRssChanging(global::System.String value);
        partial void OnLinRssChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Options")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Options : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Options オブジェクトを作成します。
        /// </summary>
        /// <param name="optionId">OptionId プロパティの初期値。</param>
        /// <param name="blogId">BlogId プロパティの初期値。</param>
        /// <param name="optionName">OptionName プロパティの初期値。</param>
        /// <param name="optionValue">OptionValue プロパティの初期値。</param>
        /// <param name="autoload">Autoload プロパティの初期値。</param>
        public static Options CreateOptions(global::System.Decimal optionId, global::System.Int32 blogId, global::System.String optionName, global::System.String optionValue, global::System.String autoload)
        {
            Options options = new Options();
            options.OptionId = optionId;
            options.BlogId = blogId;
            options.OptionName = optionName;
            options.OptionValue = optionValue;
            options.Autoload = autoload;
            return options;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OptionId
        {
            get
            {
                return _OptionId;
            }
            set
            {
                if (_OptionId != value)
                {
                    OnOptionIdChanging(value);
                    ReportPropertyChanging("OptionId");
                    _OptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionId");
                    OnOptionIdChanged();
                }
            }
        }
        private global::System.Decimal _OptionId;
        partial void OnOptionIdChanging(global::System.Decimal value);
        partial void OnOptionIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlogId
        {
            get
            {
                return _BlogId;
            }
            set
            {
                OnBlogIdChanging(value);
                ReportPropertyChanging("BlogId");
                _BlogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlogId");
                OnBlogIdChanged();
            }
        }
        private global::System.Int32 _BlogId;
        partial void OnBlogIdChanging(global::System.Int32 value);
        partial void OnBlogIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionName
        {
            get
            {
                return _OptionName;
            }
            set
            {
                OnOptionNameChanging(value);
                ReportPropertyChanging("OptionName");
                _OptionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionName");
                OnOptionNameChanged();
            }
        }
        private global::System.String _OptionName;
        partial void OnOptionNameChanging(global::System.String value);
        partial void OnOptionNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionValue
        {
            get
            {
                return _OptionValue;
            }
            set
            {
                OnOptionValueChanging(value);
                ReportPropertyChanging("OptionValue");
                _OptionValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionValue");
                OnOptionValueChanged();
            }
        }
        private global::System.String _OptionValue;
        partial void OnOptionValueChanging(global::System.String value);
        partial void OnOptionValueChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Autoload
        {
            get
            {
                return _Autoload;
            }
            set
            {
                OnAutoloadChanging(value);
                ReportPropertyChanging("Autoload");
                _Autoload = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Autoload");
                OnAutoloadChanged();
            }
        }
        private global::System.String _Autoload;
        partial void OnAutoloadChanging(global::System.String value);
        partial void OnAutoloadChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Postmeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Postmeta : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Postmeta オブジェクトを作成します。
        /// </summary>
        /// <param name="metaId">MetaId プロパティの初期値。</param>
        /// <param name="postId">PostId プロパティの初期値。</param>
        public static Postmeta CreatePostmeta(global::System.Decimal metaId, global::System.Decimal postId)
        {
            Postmeta postmeta = new Postmeta();
            postmeta.MetaId = metaId;
            postmeta.PostId = postId;
            return postmeta;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MetaId
        {
            get
            {
                return _MetaId;
            }
            set
            {
                if (_MetaId != value)
                {
                    OnMetaIdChanging(value);
                    ReportPropertyChanging("MetaId");
                    _MetaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetaId");
                    OnMetaIdChanged();
                }
            }
        }
        private global::System.Decimal _MetaId;
        partial void OnMetaIdChanging(global::System.Decimal value);
        partial void OnMetaIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Decimal _PostId;
        partial void OnPostIdChanging(global::System.Decimal value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKey
        {
            get
            {
                return _MetaKey;
            }
            set
            {
                OnMetaKeyChanging(value);
                ReportPropertyChanging("MetaKey");
                _MetaKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKey");
                OnMetaKeyChanged();
            }
        }
        private global::System.String _MetaKey;
        partial void OnMetaKeyChanging(global::System.String value);
        partial void OnMetaKeyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaValue
        {
            get
            {
                return _MetaValue;
            }
            set
            {
                OnMetaValueChanging(value);
                ReportPropertyChanging("MetaValue");
                _MetaValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaValue");
                OnMetaValueChanged();
            }
        }
        private global::System.String _MetaValue;
        partial void OnMetaValueChanging(global::System.String value);
        partial void OnMetaValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Posts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Posts : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Posts オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="postAuthor">PostAuthor プロパティの初期値。</param>
        /// <param name="postDate">PostDate プロパティの初期値。</param>
        /// <param name="postDateGmt">PostDateGmt プロパティの初期値。</param>
        /// <param name="postContent">PostContent プロパティの初期値。</param>
        /// <param name="postTitle">PostTitle プロパティの初期値。</param>
        /// <param name="postCategory">PostCategory プロパティの初期値。</param>
        /// <param name="postExcerpt">PostExcerpt プロパティの初期値。</param>
        /// <param name="postStatus">PostStatus プロパティの初期値。</param>
        /// <param name="commentStatus">CommentStatus プロパティの初期値。</param>
        /// <param name="pingStatus">PingStatus プロパティの初期値。</param>
        /// <param name="postPassword">PostPassword プロパティの初期値。</param>
        /// <param name="postName">PostName プロパティの初期値。</param>
        /// <param name="toPing">ToPing プロパティの初期値。</param>
        /// <param name="pinged">Pinged プロパティの初期値。</param>
        /// <param name="postModified">PostModified プロパティの初期値。</param>
        /// <param name="postModifiedGmt">PostModifiedGmt プロパティの初期値。</param>
        /// <param name="postContentFiltered">PostContentFiltered プロパティの初期値。</param>
        /// <param name="postParent">PostParent プロパティの初期値。</param>
        /// <param name="guid">Guid プロパティの初期値。</param>
        /// <param name="menuOrder">MenuOrder プロパティの初期値。</param>
        /// <param name="postType">PostType プロパティの初期値。</param>
        /// <param name="postMimeType">PostMimeType プロパティの初期値。</param>
        /// <param name="commentCount">CommentCount プロパティの初期値。</param>
        public static Posts CreatePosts(global::System.Decimal id, global::System.Decimal postAuthor, global::System.DateTime postDate, global::System.DateTime postDateGmt, global::System.String postContent, global::System.String postTitle, global::System.Int32 postCategory, global::System.String postExcerpt, global::System.String postStatus, global::System.String commentStatus, global::System.String pingStatus, global::System.String postPassword, global::System.String postName, global::System.String toPing, global::System.String pinged, global::System.DateTime postModified, global::System.DateTime postModifiedGmt, global::System.String postContentFiltered, global::System.Decimal postParent, global::System.String guid, global::System.Int32 menuOrder, global::System.String postType, global::System.String postMimeType, global::System.Int64 commentCount)
        {
            Posts posts = new Posts();
            posts.ID = id;
            posts.PostAuthor = postAuthor;
            posts.PostDate = postDate;
            posts.PostDateGmt = postDateGmt;
            posts.PostContent = postContent;
            posts.PostTitle = postTitle;
            posts.PostCategory = postCategory;
            posts.PostExcerpt = postExcerpt;
            posts.PostStatus = postStatus;
            posts.CommentStatus = commentStatus;
            posts.PingStatus = pingStatus;
            posts.PostPassword = postPassword;
            posts.PostName = postName;
            posts.ToPing = toPing;
            posts.Pinged = pinged;
            posts.PostModified = postModified;
            posts.PostModifiedGmt = postModifiedGmt;
            posts.PostContentFiltered = postContentFiltered;
            posts.PostParent = postParent;
            posts.Guid = guid;
            posts.MenuOrder = menuOrder;
            posts.PostType = postType;
            posts.PostMimeType = postMimeType;
            posts.CommentCount = commentCount;
            return posts;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PostAuthor
        {
            get
            {
                return _PostAuthor;
            }
            set
            {
                OnPostAuthorChanging(value);
                ReportPropertyChanging("PostAuthor");
                _PostAuthor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostAuthor");
                OnPostAuthorChanged();
            }
        }
        private global::System.Decimal _PostAuthor;
        partial void OnPostAuthorChanging(global::System.Decimal value);
        partial void OnPostAuthorChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDateGmt
        {
            get
            {
                return _PostDateGmt;
            }
            set
            {
                OnPostDateGmtChanging(value);
                ReportPropertyChanging("PostDateGmt");
                _PostDateGmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDateGmt");
                OnPostDateGmtChanged();
            }
        }
        private global::System.DateTime _PostDateGmt;
        partial void OnPostDateGmtChanging(global::System.DateTime value);
        partial void OnPostDateGmtChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostContent
        {
            get
            {
                return _PostContent;
            }
            set
            {
                OnPostContentChanging(value);
                ReportPropertyChanging("PostContent");
                _PostContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostContent");
                OnPostContentChanged();
            }
        }
        private global::System.String _PostContent;
        partial void OnPostContentChanging(global::System.String value);
        partial void OnPostContentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostTitle
        {
            get
            {
                return _PostTitle;
            }
            set
            {
                OnPostTitleChanging(value);
                ReportPropertyChanging("PostTitle");
                _PostTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostTitle");
                OnPostTitleChanged();
            }
        }
        private global::System.String _PostTitle;
        partial void OnPostTitleChanging(global::System.String value);
        partial void OnPostTitleChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostCategory
        {
            get
            {
                return _PostCategory;
            }
            set
            {
                OnPostCategoryChanging(value);
                ReportPropertyChanging("PostCategory");
                _PostCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostCategory");
                OnPostCategoryChanged();
            }
        }
        private global::System.Int32 _PostCategory;
        partial void OnPostCategoryChanging(global::System.Int32 value);
        partial void OnPostCategoryChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostExcerpt
        {
            get
            {
                return _PostExcerpt;
            }
            set
            {
                OnPostExcerptChanging(value);
                ReportPropertyChanging("PostExcerpt");
                _PostExcerpt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostExcerpt");
                OnPostExcerptChanged();
            }
        }
        private global::System.String _PostExcerpt;
        partial void OnPostExcerptChanging(global::System.String value);
        partial void OnPostExcerptChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostStatus
        {
            get
            {
                return _PostStatus;
            }
            set
            {
                OnPostStatusChanging(value);
                ReportPropertyChanging("PostStatus");
                _PostStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostStatus");
                OnPostStatusChanged();
            }
        }
        private global::System.String _PostStatus;
        partial void OnPostStatusChanging(global::System.String value);
        partial void OnPostStatusChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentStatus
        {
            get
            {
                return _CommentStatus;
            }
            set
            {
                OnCommentStatusChanging(value);
                ReportPropertyChanging("CommentStatus");
                _CommentStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentStatus");
                OnCommentStatusChanged();
            }
        }
        private global::System.String _CommentStatus;
        partial void OnCommentStatusChanging(global::System.String value);
        partial void OnCommentStatusChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PingStatus
        {
            get
            {
                return _PingStatus;
            }
            set
            {
                OnPingStatusChanging(value);
                ReportPropertyChanging("PingStatus");
                _PingStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PingStatus");
                OnPingStatusChanged();
            }
        }
        private global::System.String _PingStatus;
        partial void OnPingStatusChanging(global::System.String value);
        partial void OnPingStatusChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostPassword
        {
            get
            {
                return _PostPassword;
            }
            set
            {
                OnPostPasswordChanging(value);
                ReportPropertyChanging("PostPassword");
                _PostPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostPassword");
                OnPostPasswordChanged();
            }
        }
        private global::System.String _PostPassword;
        partial void OnPostPasswordChanging(global::System.String value);
        partial void OnPostPasswordChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostName
        {
            get
            {
                return _PostName;
            }
            set
            {
                OnPostNameChanging(value);
                ReportPropertyChanging("PostName");
                _PostName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostName");
                OnPostNameChanged();
            }
        }
        private global::System.String _PostName;
        partial void OnPostNameChanging(global::System.String value);
        partial void OnPostNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToPing
        {
            get
            {
                return _ToPing;
            }
            set
            {
                OnToPingChanging(value);
                ReportPropertyChanging("ToPing");
                _ToPing = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToPing");
                OnToPingChanged();
            }
        }
        private global::System.String _ToPing;
        partial void OnToPingChanging(global::System.String value);
        partial void OnToPingChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pinged
        {
            get
            {
                return _Pinged;
            }
            set
            {
                OnPingedChanging(value);
                ReportPropertyChanging("Pinged");
                _Pinged = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pinged");
                OnPingedChanged();
            }
        }
        private global::System.String _Pinged;
        partial void OnPingedChanging(global::System.String value);
        partial void OnPingedChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostModified
        {
            get
            {
                return _PostModified;
            }
            set
            {
                OnPostModifiedChanging(value);
                ReportPropertyChanging("PostModified");
                _PostModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostModified");
                OnPostModifiedChanged();
            }
        }
        private global::System.DateTime _PostModified;
        partial void OnPostModifiedChanging(global::System.DateTime value);
        partial void OnPostModifiedChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostModifiedGmt
        {
            get
            {
                return _PostModifiedGmt;
            }
            set
            {
                OnPostModifiedGmtChanging(value);
                ReportPropertyChanging("PostModifiedGmt");
                _PostModifiedGmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostModifiedGmt");
                OnPostModifiedGmtChanged();
            }
        }
        private global::System.DateTime _PostModifiedGmt;
        partial void OnPostModifiedGmtChanging(global::System.DateTime value);
        partial void OnPostModifiedGmtChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostContentFiltered
        {
            get
            {
                return _PostContentFiltered;
            }
            set
            {
                OnPostContentFilteredChanging(value);
                ReportPropertyChanging("PostContentFiltered");
                _PostContentFiltered = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostContentFiltered");
                OnPostContentFilteredChanged();
            }
        }
        private global::System.String _PostContentFiltered;
        partial void OnPostContentFilteredChanging(global::System.String value);
        partial void OnPostContentFilteredChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PostParent
        {
            get
            {
                return _PostParent;
            }
            set
            {
                OnPostParentChanging(value);
                ReportPropertyChanging("PostParent");
                _PostParent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostParent");
                OnPostParentChanged();
            }
        }
        private global::System.Decimal _PostParent;
        partial void OnPostParentChanging(global::System.Decimal value);
        partial void OnPostParentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuOrder
        {
            get
            {
                return _MenuOrder;
            }
            set
            {
                OnMenuOrderChanging(value);
                ReportPropertyChanging("MenuOrder");
                _MenuOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuOrder");
                OnMenuOrderChanged();
            }
        }
        private global::System.Int32 _MenuOrder;
        partial void OnMenuOrderChanging(global::System.Int32 value);
        partial void OnMenuOrderChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostType
        {
            get
            {
                return _PostType;
            }
            set
            {
                OnPostTypeChanging(value);
                ReportPropertyChanging("PostType");
                _PostType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostType");
                OnPostTypeChanged();
            }
        }
        private global::System.String _PostType;
        partial void OnPostTypeChanging(global::System.String value);
        partial void OnPostTypeChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostMimeType
        {
            get
            {
                return _PostMimeType;
            }
            set
            {
                OnPostMimeTypeChanging(value);
                ReportPropertyChanging("PostMimeType");
                _PostMimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostMimeType");
                OnPostMimeTypeChanged();
            }
        }
        private global::System.String _PostMimeType;
        partial void OnPostMimeTypeChanging(global::System.String value);
        partial void OnPostMimeTypeChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CommentCount
        {
            get
            {
                return _CommentCount;
            }
            set
            {
                OnCommentCountChanging(value);
                ReportPropertyChanging("CommentCount");
                _CommentCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentCount");
                OnCommentCountChanged();
            }
        }
        private global::System.Int64 _CommentCount;
        partial void OnCommentCountChanging(global::System.Int64 value);
        partial void OnCommentCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="TermRelationships")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TermRelationships : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい TermRelationships オブジェクトを作成します。
        /// </summary>
        /// <param name="objectId">ObjectId プロパティの初期値。</param>
        /// <param name="termTaxonomyId">TermTaxonomyId プロパティの初期値。</param>
        /// <param name="termOrder">TermOrder プロパティの初期値。</param>
        public static TermRelationships CreateTermRelationships(global::System.Decimal objectId, global::System.Decimal termTaxonomyId, global::System.Int32 termOrder)
        {
            TermRelationships termRelationships = new TermRelationships();
            termRelationships.ObjectId = objectId;
            termRelationships.TermTaxonomyId = termTaxonomyId;
            termRelationships.TermOrder = termOrder;
            return termRelationships;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Decimal _ObjectId;
        partial void OnObjectIdChanging(global::System.Decimal value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TermTaxonomyId
        {
            get
            {
                return _TermTaxonomyId;
            }
            set
            {
                if (_TermTaxonomyId != value)
                {
                    OnTermTaxonomyIdChanging(value);
                    ReportPropertyChanging("TermTaxonomyId");
                    _TermTaxonomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TermTaxonomyId");
                    OnTermTaxonomyIdChanged();
                }
            }
        }
        private global::System.Decimal _TermTaxonomyId;
        partial void OnTermTaxonomyIdChanging(global::System.Decimal value);
        partial void OnTermTaxonomyIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TermOrder
        {
            get
            {
                return _TermOrder;
            }
            set
            {
                OnTermOrderChanging(value);
                ReportPropertyChanging("TermOrder");
                _TermOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermOrder");
                OnTermOrderChanged();
            }
        }
        private global::System.Int32 _TermOrder;
        partial void OnTermOrderChanging(global::System.Int32 value);
        partial void OnTermOrderChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Terms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Terms : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Terms オブジェクトを作成します。
        /// </summary>
        /// <param name="termId">TermId プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        /// <param name="slug">Slug プロパティの初期値。</param>
        /// <param name="termGroup">TermGroup プロパティの初期値。</param>
        public static Terms CreateTerms(global::System.Decimal termId, global::System.String name, global::System.String slug, global::System.Int64 termGroup)
        {
            Terms terms = new Terms();
            terms.TermId = termId;
            terms.Name = name;
            terms.Slug = slug;
            terms.TermGroup = termGroup;
            return terms;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TermId
        {
            get
            {
                return _TermId;
            }
            set
            {
                if (_TermId != value)
                {
                    OnTermIdChanging(value);
                    ReportPropertyChanging("TermId");
                    _TermId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TermId");
                    OnTermIdChanged();
                }
            }
        }
        private global::System.Decimal _TermId;
        partial void OnTermIdChanging(global::System.Decimal value);
        partial void OnTermIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TermGroup
        {
            get
            {
                return _TermGroup;
            }
            set
            {
                OnTermGroupChanging(value);
                ReportPropertyChanging("TermGroup");
                _TermGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermGroup");
                OnTermGroupChanged();
            }
        }
        private global::System.Int64 _TermGroup;
        partial void OnTermGroupChanging(global::System.Int64 value);
        partial void OnTermGroupChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="TermTaxonomy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TermTaxonomy : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい TermTaxonomy オブジェクトを作成します。
        /// </summary>
        /// <param name="termTaxonomyId">TermTaxonomyId プロパティの初期値。</param>
        /// <param name="termId">TermId プロパティの初期値。</param>
        /// <param name="taxonomy">Taxonomy プロパティの初期値。</param>
        /// <param name="description">Description プロパティの初期値。</param>
        /// <param name="parent">Parent プロパティの初期値。</param>
        /// <param name="count">Count プロパティの初期値。</param>
        public static TermTaxonomy CreateTermTaxonomy(global::System.Decimal termTaxonomyId, global::System.Decimal termId, global::System.String taxonomy, global::System.String description, global::System.Decimal parent, global::System.Int64 count)
        {
            TermTaxonomy termTaxonomy = new TermTaxonomy();
            termTaxonomy.TermTaxonomyId = termTaxonomyId;
            termTaxonomy.TermId = termId;
            termTaxonomy.Taxonomy = taxonomy;
            termTaxonomy.Description = description;
            termTaxonomy.Parent = parent;
            termTaxonomy.Count = count;
            return termTaxonomy;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TermTaxonomyId
        {
            get
            {
                return _TermTaxonomyId;
            }
            set
            {
                if (_TermTaxonomyId != value)
                {
                    OnTermTaxonomyIdChanging(value);
                    ReportPropertyChanging("TermTaxonomyId");
                    _TermTaxonomyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TermTaxonomyId");
                    OnTermTaxonomyIdChanged();
                }
            }
        }
        private global::System.Decimal _TermTaxonomyId;
        partial void OnTermTaxonomyIdChanging(global::System.Decimal value);
        partial void OnTermTaxonomyIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TermId
        {
            get
            {
                return _TermId;
            }
            set
            {
                OnTermIdChanging(value);
                ReportPropertyChanging("TermId");
                _TermId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermId");
                OnTermIdChanged();
            }
        }
        private global::System.Decimal _TermId;
        partial void OnTermIdChanging(global::System.Decimal value);
        partial void OnTermIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Taxonomy
        {
            get
            {
                return _Taxonomy;
            }
            set
            {
                OnTaxonomyChanging(value);
                ReportPropertyChanging("Taxonomy");
                _Taxonomy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Taxonomy");
                OnTaxonomyChanged();
            }
        }
        private global::System.String _Taxonomy;
        partial void OnTaxonomyChanging(global::System.String value);
        partial void OnTaxonomyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private global::System.Decimal _Parent;
        partial void OnParentChanging(global::System.Decimal value);
        partial void OnParentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int64 _Count;
        partial void OnCountChanging(global::System.Int64 value);
        partial void OnCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Usermeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usermeta : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Usermeta オブジェクトを作成します。
        /// </summary>
        /// <param name="umetaId">UmetaId プロパティの初期値。</param>
        /// <param name="userId">UserId プロパティの初期値。</param>
        public static Usermeta CreateUsermeta(global::System.Decimal umetaId, global::System.Decimal userId)
        {
            Usermeta usermeta = new Usermeta();
            usermeta.UmetaId = umetaId;
            usermeta.UserId = userId;
            return usermeta;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UmetaId
        {
            get
            {
                return _UmetaId;
            }
            set
            {
                if (_UmetaId != value)
                {
                    OnUmetaIdChanging(value);
                    ReportPropertyChanging("UmetaId");
                    _UmetaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UmetaId");
                    OnUmetaIdChanged();
                }
            }
        }
        private global::System.Decimal _UmetaId;
        partial void OnUmetaIdChanging(global::System.Decimal value);
        partial void OnUmetaIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaKey
        {
            get
            {
                return _MetaKey;
            }
            set
            {
                OnMetaKeyChanging(value);
                ReportPropertyChanging("MetaKey");
                _MetaKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaKey");
                OnMetaKeyChanged();
            }
        }
        private global::System.String _MetaKey;
        partial void OnMetaKeyChanging(global::System.String value);
        partial void OnMetaKeyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MetaValue
        {
            get
            {
                return _MetaValue;
            }
            set
            {
                OnMetaValueChanging(value);
                ReportPropertyChanging("MetaValue");
                _MetaValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MetaValue");
                OnMetaValueChanged();
            }
        }
        private global::System.String _MetaValue;
        partial void OnMetaValueChanging(global::System.String value);
        partial void OnMetaValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Users オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="userLogin">UserLogin プロパティの初期値。</param>
        /// <param name="userPass">UserPass プロパティの初期値。</param>
        /// <param name="userNicename">UserNicename プロパティの初期値。</param>
        /// <param name="userEmail">UserEmail プロパティの初期値。</param>
        /// <param name="userUrl">UserUrl プロパティの初期値。</param>
        /// <param name="userRegistered">UserRegistered プロパティの初期値。</param>
        /// <param name="userActivationKey">UserActivationKey プロパティの初期値。</param>
        /// <param name="userStatus">UserStatus プロパティの初期値。</param>
        /// <param name="displayName">DisplayName プロパティの初期値。</param>
        public static Users CreateUsers(global::System.Decimal id, global::System.String userLogin, global::System.String userPass, global::System.String userNicename, global::System.String userEmail, global::System.String userUrl, global::System.DateTime userRegistered, global::System.String userActivationKey, global::System.Int32 userStatus, global::System.String displayName)
        {
            Users users = new Users();
            users.ID = id;
            users.UserLogin = userLogin;
            users.UserPass = userPass;
            users.UserNicename = userNicename;
            users.UserEmail = userEmail;
            users.UserUrl = userUrl;
            users.UserRegistered = userRegistered;
            users.UserActivationKey = userActivationKey;
            users.UserStatus = userStatus;
            users.DisplayName = displayName;
            return users;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserLogin
        {
            get
            {
                return _UserLogin;
            }
            set
            {
                OnUserLoginChanging(value);
                ReportPropertyChanging("UserLogin");
                _UserLogin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserLogin");
                OnUserLoginChanged();
            }
        }
        private global::System.String _UserLogin;
        partial void OnUserLoginChanging(global::System.String value);
        partial void OnUserLoginChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserPass
        {
            get
            {
                return _UserPass;
            }
            set
            {
                OnUserPassChanging(value);
                ReportPropertyChanging("UserPass");
                _UserPass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserPass");
                OnUserPassChanged();
            }
        }
        private global::System.String _UserPass;
        partial void OnUserPassChanging(global::System.String value);
        partial void OnUserPassChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserNicename
        {
            get
            {
                return _UserNicename;
            }
            set
            {
                OnUserNicenameChanging(value);
                ReportPropertyChanging("UserNicename");
                _UserNicename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserNicename");
                OnUserNicenameChanged();
            }
        }
        private global::System.String _UserNicename;
        partial void OnUserNicenameChanging(global::System.String value);
        partial void OnUserNicenameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                OnUserEmailChanging(value);
                ReportPropertyChanging("UserEmail");
                _UserEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserEmail");
                OnUserEmailChanged();
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserUrl
        {
            get
            {
                return _UserUrl;
            }
            set
            {
                OnUserUrlChanging(value);
                ReportPropertyChanging("UserUrl");
                _UserUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserUrl");
                OnUserUrlChanged();
            }
        }
        private global::System.String _UserUrl;
        partial void OnUserUrlChanging(global::System.String value);
        partial void OnUserUrlChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UserRegistered
        {
            get
            {
                return _UserRegistered;
            }
            set
            {
                OnUserRegisteredChanging(value);
                ReportPropertyChanging("UserRegistered");
                _UserRegistered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRegistered");
                OnUserRegisteredChanged();
            }
        }
        private global::System.DateTime _UserRegistered;
        partial void OnUserRegisteredChanging(global::System.DateTime value);
        partial void OnUserRegisteredChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserActivationKey
        {
            get
            {
                return _UserActivationKey;
            }
            set
            {
                OnUserActivationKeyChanging(value);
                ReportPropertyChanging("UserActivationKey");
                _UserActivationKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserActivationKey");
                OnUserActivationKeyChanged();
            }
        }
        private global::System.String _UserActivationKey;
        partial void OnUserActivationKeyChanging(global::System.String value);
        partial void OnUserActivationKeyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserStatus
        {
            get
            {
                return _UserStatus;
            }
            set
            {
                OnUserStatusChanging(value);
                ReportPropertyChanging("UserStatus");
                _UserStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserStatus");
                OnUserStatusChanged();
            }
        }
        private global::System.Int32 _UserStatus;
        partial void OnUserStatusChanging(global::System.Int32 value);
        partial void OnUserStatusChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="wordpressModel", Name="wp_comments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class wp_comments : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい wp_comments オブジェクトを作成します。
        /// </summary>
        /// <param name="commentID">CommentID プロパティの初期値。</param>
        /// <param name="commentPostID">CommentPostID プロパティの初期値。</param>
        /// <param name="commentAuthor">CommentAuthor プロパティの初期値。</param>
        /// <param name="commentAuthorEmail">CommentAuthorEmail プロパティの初期値。</param>
        /// <param name="commentAuthorUrl">CommentAuthorUrl プロパティの初期値。</param>
        /// <param name="commentAuthorIP">CommentAuthorIP プロパティの初期値。</param>
        /// <param name="commentDate">CommentDate プロパティの初期値。</param>
        /// <param name="commentDateGmt">CommentDateGmt プロパティの初期値。</param>
        /// <param name="commentContent">CommentContent プロパティの初期値。</param>
        /// <param name="commentKarma">CommentKarma プロパティの初期値。</param>
        /// <param name="commentApproved">CommentApproved プロパティの初期値。</param>
        /// <param name="commentAgent">CommentAgent プロパティの初期値。</param>
        /// <param name="commentType">CommentType プロパティの初期値。</param>
        /// <param name="commentParent">CommentParent プロパティの初期値。</param>
        /// <param name="userId">UserId プロパティの初期値。</param>
        public static wp_comments Createwp_comments(global::System.Decimal commentID, global::System.Decimal commentPostID, global::System.String commentAuthor, global::System.String commentAuthorEmail, global::System.String commentAuthorUrl, global::System.String commentAuthorIP, global::System.DateTime commentDate, global::System.DateTime commentDateGmt, global::System.String commentContent, global::System.Int32 commentKarma, global::System.String commentApproved, global::System.String commentAgent, global::System.String commentType, global::System.Decimal commentParent, global::System.Decimal userId)
        {
            wp_comments wp_comments = new wp_comments();
            wp_comments.CommentID = commentID;
            wp_comments.CommentPostID = commentPostID;
            wp_comments.CommentAuthor = commentAuthor;
            wp_comments.CommentAuthorEmail = commentAuthorEmail;
            wp_comments.CommentAuthorUrl = commentAuthorUrl;
            wp_comments.CommentAuthorIP = commentAuthorIP;
            wp_comments.CommentDate = commentDate;
            wp_comments.CommentDateGmt = commentDateGmt;
            wp_comments.CommentContent = commentContent;
            wp_comments.CommentKarma = commentKarma;
            wp_comments.CommentApproved = commentApproved;
            wp_comments.CommentAgent = commentAgent;
            wp_comments.CommentType = commentType;
            wp_comments.CommentParent = commentParent;
            wp_comments.UserId = userId;
            return wp_comments;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Decimal _CommentID;
        partial void OnCommentIDChanging(global::System.Decimal value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommentPostID
        {
            get
            {
                return _CommentPostID;
            }
            set
            {
                OnCommentPostIDChanging(value);
                ReportPropertyChanging("CommentPostID");
                _CommentPostID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentPostID");
                OnCommentPostIDChanged();
            }
        }
        private global::System.Decimal _CommentPostID;
        partial void OnCommentPostIDChanging(global::System.Decimal value);
        partial void OnCommentPostIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentAuthor
        {
            get
            {
                return _CommentAuthor;
            }
            set
            {
                OnCommentAuthorChanging(value);
                ReportPropertyChanging("CommentAuthor");
                _CommentAuthor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentAuthor");
                OnCommentAuthorChanged();
            }
        }
        private global::System.String _CommentAuthor;
        partial void OnCommentAuthorChanging(global::System.String value);
        partial void OnCommentAuthorChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentAuthorEmail
        {
            get
            {
                return _CommentAuthorEmail;
            }
            set
            {
                OnCommentAuthorEmailChanging(value);
                ReportPropertyChanging("CommentAuthorEmail");
                _CommentAuthorEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentAuthorEmail");
                OnCommentAuthorEmailChanged();
            }
        }
        private global::System.String _CommentAuthorEmail;
        partial void OnCommentAuthorEmailChanging(global::System.String value);
        partial void OnCommentAuthorEmailChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentAuthorUrl
        {
            get
            {
                return _CommentAuthorUrl;
            }
            set
            {
                OnCommentAuthorUrlChanging(value);
                ReportPropertyChanging("CommentAuthorUrl");
                _CommentAuthorUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentAuthorUrl");
                OnCommentAuthorUrlChanged();
            }
        }
        private global::System.String _CommentAuthorUrl;
        partial void OnCommentAuthorUrlChanging(global::System.String value);
        partial void OnCommentAuthorUrlChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentAuthorIP
        {
            get
            {
                return _CommentAuthorIP;
            }
            set
            {
                OnCommentAuthorIPChanging(value);
                ReportPropertyChanging("CommentAuthorIP");
                _CommentAuthorIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentAuthorIP");
                OnCommentAuthorIPChanged();
            }
        }
        private global::System.String _CommentAuthorIP;
        partial void OnCommentAuthorIPChanging(global::System.String value);
        partial void OnCommentAuthorIPChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CommentDate
        {
            get
            {
                return _CommentDate;
            }
            set
            {
                OnCommentDateChanging(value);
                ReportPropertyChanging("CommentDate");
                _CommentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentDate");
                OnCommentDateChanged();
            }
        }
        private global::System.DateTime _CommentDate;
        partial void OnCommentDateChanging(global::System.DateTime value);
        partial void OnCommentDateChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CommentDateGmt
        {
            get
            {
                return _CommentDateGmt;
            }
            set
            {
                OnCommentDateGmtChanging(value);
                ReportPropertyChanging("CommentDateGmt");
                _CommentDateGmt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentDateGmt");
                OnCommentDateGmtChanged();
            }
        }
        private global::System.DateTime _CommentDateGmt;
        partial void OnCommentDateGmtChanging(global::System.DateTime value);
        partial void OnCommentDateGmtChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentContent
        {
            get
            {
                return _CommentContent;
            }
            set
            {
                OnCommentContentChanging(value);
                ReportPropertyChanging("CommentContent");
                _CommentContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentContent");
                OnCommentContentChanged();
            }
        }
        private global::System.String _CommentContent;
        partial void OnCommentContentChanging(global::System.String value);
        partial void OnCommentContentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentKarma
        {
            get
            {
                return _CommentKarma;
            }
            set
            {
                OnCommentKarmaChanging(value);
                ReportPropertyChanging("CommentKarma");
                _CommentKarma = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentKarma");
                OnCommentKarmaChanged();
            }
        }
        private global::System.Int32 _CommentKarma;
        partial void OnCommentKarmaChanging(global::System.Int32 value);
        partial void OnCommentKarmaChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentApproved
        {
            get
            {
                return _CommentApproved;
            }
            set
            {
                OnCommentApprovedChanging(value);
                ReportPropertyChanging("CommentApproved");
                _CommentApproved = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentApproved");
                OnCommentApprovedChanged();
            }
        }
        private global::System.String _CommentApproved;
        partial void OnCommentApprovedChanging(global::System.String value);
        partial void OnCommentApprovedChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentAgent
        {
            get
            {
                return _CommentAgent;
            }
            set
            {
                OnCommentAgentChanging(value);
                ReportPropertyChanging("CommentAgent");
                _CommentAgent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentAgent");
                OnCommentAgentChanged();
            }
        }
        private global::System.String _CommentAgent;
        partial void OnCommentAgentChanging(global::System.String value);
        partial void OnCommentAgentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentType
        {
            get
            {
                return _CommentType;
            }
            set
            {
                OnCommentTypeChanging(value);
                ReportPropertyChanging("CommentType");
                _CommentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommentType");
                OnCommentTypeChanged();
            }
        }
        private global::System.String _CommentType;
        partial void OnCommentTypeChanging(global::System.String value);
        partial void OnCommentTypeChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommentParent
        {
            get
            {
                return _CommentParent;
            }
            set
            {
                OnCommentParentChanging(value);
                ReportPropertyChanging("CommentParent");
                _CommentParent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentParent");
                OnCommentParentChanged();
            }
        }
        private global::System.Decimal _CommentParent;
        partial void OnCommentParentChanging(global::System.Decimal value);
        partial void OnCommentParentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Decimal _UserId;
        partial void OnUserIdChanging(global::System.Decimal value);
        partial void OnUserIdChanged();

        #endregion
    
    }

    #endregion
    
}
